[versions]
agp = "8.2.2"
android-compileSdk = "34"
android-minSdk = "24"
android-targetSdk = "34"
androidx-activityCompose = "1.9.0"
compose-plugin = "1.6.11"
composeWebviewMultiplatform = "1.9.12"
kachetor = "1.0.0"
kotlin = "2.0.0"
koin = "3.6.0-alpha3"
koin-compose = "1.1.5"
lifecycleViewModel = "2.8.3"
navigationCompose = "2.7.0-alpha07"
haze = "0.7.2"
haze-material = "0.7.2"
coil = "3.0.0-alpha07"
compottie = "1.1.2"
placeholder-material3 = "1.0.8"
androidx-startup = "1.1.1"
lifecycle = "2.8.0"

# Firebase
firebase-firestore = "1.13.0"
firebaseBom = "33.1.1"
firebaseCrashlyticsPlugin = "3.0.2"
firebasePerfPlugin = "1.4.2"
firebaseAuth = "1.13.0"
gmsPlugin = "4.4.2"

# Network
kotlinx-serialization = "1.7.1"
ktor = "2.3.12"
coroutines = "1.8.1"
urlencoderLib = "1.5.0"

datastore = "1.1.1"
realm = "2.0.0"

[libraries]
# AndroidX
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
androidx-lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel", version.ref = "lifecycleViewModel" }
androidx-startup = { module = "androidx.startup:startup-runtime", version.ref = "androidx-startup" }

compose-webview-multiplatform = { module = "io.github.kevinnzou:compose-webview-multiplatform", version.ref = "composeWebviewMultiplatform" }
haze = { group = "dev.chrisbanes.haze", name = "haze", version.ref = "haze" }
haze-material = { group = "dev.chrisbanes.haze", name = "haze-materials", version.ref = "haze-material" }
compottie = { group = "io.github.alexzhirkevich", name = "compottie", version.ref = "compottie" }
placeholder-material3 = { group = "com.eygraber", name = "compose-placeholder-material3", version.ref = "placeholder-material3" }
kachetor = { module = "com.vipulasri.kachetor:kachetor", version.ref = "kachetor" }

# Firebase
firebase-bom = { group = "com.google.firebase", name = "firebase-bom", version.ref = "firebaseBom" }
firebase-auth = { module = "dev.gitlive:firebase-auth", version.ref = "firebaseAuth" }
firebase-fireStore = { module = "dev.gitlive:firebase-firestore", version.ref = "firebase-firestore" }

# Jetbrains Compose
navigation-compose = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "navigationCompose" }
lifecycle-runtime-compose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-runtime-compose", version.ref = "lifecycle" }
lifecycle-viewmodel-compose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycle" }

# Coil
coil = { group = "io.coil-kt.coil3", name = "coil", version.ref = "coil" }
coil-compose = { group = "io.coil-kt.coil3", name = "coil-compose", version.ref = "coil" }
coil-network-ktor = { group = "io.coil-kt.coil3", name = "coil-network-ktor", version.ref = "coil" }

# Network
kotlinx-coroutines-android = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-android", version.ref = "coroutines" }
kotlinx-serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }

# Ktor
ktor-client-android = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-resources = { module = "io.ktor:ktor-client-resources", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }

datastore-core = { module = "androidx.datastore:datastore-preferences-core", version.ref = "datastore" }
datastore-okio = { module = "androidx.datastore:datastore-core-okio", version.ref = "datastore" }

# Koin
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koin-compose" }
urlencoder-lib = { module = "net.thauvin.erik.urlencoder:urlencoder-lib", version.ref = "urlencoderLib" }

mongodb-realm = { module = "io.realm.kotlin:library-base", version.ref = "realm" }

[bundles]
ktor = [
    "ktor-client-core",
    "ktor-client-resources",
    "ktor-client-content-negotiation",
    "ktor-serialization-kotlinx-json",
    "ktor-client-logging",
]

datastore = [
    "datastore-core",
    "datastore-okio"
]

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinxSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
firebase-crashlytics = { id = "com.google.firebase.crashlytics", version.ref = "firebaseCrashlyticsPlugin" }
firebase-perf = { id = "com.google.firebase.firebase-perf", version.ref = "firebasePerfPlugin" }
gms = { id = "com.google.gms.google-services", version.ref = "gmsPlugin" }
realm-plugin = { id = "io.realm.kotlin", version.ref = "realm" }